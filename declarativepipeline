@Library("mysharedlib") _
pipeline{
    
    agent{
        label "links"
    }
tools {
  maven 'maven3.8.6'
}
triggers {
  pollSCM '* * * * *'
}
options {
  timestamps()
  buildDiscarder logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '5', daysToKeepStr: '', numToKeepStr: '5')
}
stages
{
  stage('Display into Console')
  {
      steps
      {
          echo "Job Name is ${env.JOB_NAME}"
          echo "Node Name is ${env.NODE_NAME}"
          echo "Build No. is ${env.BUILD_NUMBER}"
      }
  }
  stage('Checkout Code')    
   {
       steps
       {
            sendSlackNotifications("STARTED")
            git branch: 'development', credentialsId: '67f47e78-6d7f-4815-b78e-28d0b96c3eec', url: 'https://github.com/puneeth-devops/maven-web-application.git'
       }
   }
  stage('Build the Package')
   {
       steps
       {
           sh "mvn clean package"
       }
   }
  stage('Create Sonar Report')
    {
       steps
       {
           sh "mvn sonar:sonar"
       }
    }
   stage('Upload Artifacts into Nexus') 
    {
       steps
       {
           sh "mvn deploy"
       }
    }
  stage('Deploy to Tomcat')
    {
        steps
        {
            sshagent(['40a67f89-7283-44c6-9d89-7efc28c63e4c'])
           {
             sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war ec2-user@172.31.37.59:/opt/apache-tomcat-9.0.64/webapps"
           }  
        }
    }
} 
post {
  success {
      sendSlackNotifications("SUCCESS")
    // One or more steps need to be included within each condition's block.
  }
  failure {
      sendSlackNotifications("FAILURE")
    // One or more steps need to be included within each condition's block.
  }
}
}

/*
def notifyBuild(String buildStatus = 'STARTED') {
  // build status of null means successful
  buildStatus =  buildStatus ?: 'SUCCESSFUL'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    color = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESSFUL') {
    color = 'GREEN'
    colorCode = '#00FF00'
  } else {
    color = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary)
}
*/

